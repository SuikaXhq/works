Composition:
	- 所有调用基类函数的地方都要加上成员变量名和点
	- 需要将所有基类函数都重新覆盖一遍，函数中调用基类的接口
	- 不能被基类的指针和引用指向
	- 对象调用的永远是该类的函数

Inheritance:
	- 调用基类public函数就像调用自己的public函数一样
	- 只需要覆盖需要修改的基类函数
	- 可以被基类指针和引用指向
	- 对象调用函数时若在该类中找不到，则会调用基类中的函数
	
Conclusion:
	- 继承比组合更加自然，更符合逻辑。继承省去了较多的代码重写过程，提高了重用率。组合虽然可以自由选择覆盖哪些基类函数，但无法实现多态。
	- 事实上，继承可以看做隐式地将一个基类对象放入派生类中作为成员对象，在所有其他成员对象构造之前构造，在所有其他成员对象析构之后析构，而使用基类函数的方式则被大大简化了。